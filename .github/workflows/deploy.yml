name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

env:
  # Global environment variables
  NODE_ENV: production
  AWS_ACCESS_KEY_ID: movies-api-svc-test
  AWS_SECRET_ACCESS_KEY: movies-api-svc-test
  AWS_REGION: us-east-1
  ECR_REPOSITORY: movies-api-svc
  ECS_CLUSTER: movies-api-svc-ecs-cluster
  ECS_SERVICE: movies-api-svc-ecs-service
  CONTAINER_NAME: movies-api-svc

jobs:
  # --------------------------------------------------
  # DEVELOPMENT BRANCH: Build and Test
  # --------------------------------------------------
  build:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup pnpm before using it
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        run: pnpm test
      
      - name: Run Linter
        run: pnpm lint

      - name: Build Docker Image
        run: |
          docker build --target build -t $ECR_REPOSITORY:latest .

      - name: Run Docker Container
        run: |
          docker run \
            --name $CONTAINER_NAME \
            -p 4000:4000 \
            --restart=on-failure:0 \
            -d $ECR_REPOSITORY:latest

  # --------------------------------------------------
  # MAIN BRANCH: Build, Push, and Deploy to ECS
  # --------------------------------------------------
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup pnpm before using it
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
